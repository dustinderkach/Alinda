## [Start] Set query expression for key **
#if( $util.isNull($ctx.args.T_PK) && !$util.isNull($ctx.args.sortDirection) )
  $util.error("When providing argument 'sortDirection' you must also provide argument 'T_PK'.", "InvalidArgumentsError")
#end
#set( $modelQueryExpression = {} )
## [Start] Validate key arguments. **
#if( !$util.isNull($ctx.args.T_SK) && $util.isNull($ctx.args.T_PK) )
  $util.error("When providing argument 'T_SK' you must also provide arguments T_PK", "InvalidArgumentsError")
#end
## [End] Validate key arguments. **
#if( !$util.isNull($ctx.args.T_PK) )
  #set( $modelQueryExpression.expression = "#T_PK = :T_PK" )
  #set( $modelQueryExpression.expressionNames = {
  "#T_PK": "T_PK"
} )
  #set( $modelQueryExpression.expressionValues = {
  ":T_PK": {
      "S": "$ctx.args.T_PK"
  }
} )
#end
## [Start] Applying Key Condition **
#if( !$util.isNull($ctx.args.T_SK) && !$util.isNull($ctx.args.T_SK.beginsWith) )
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND begins_with(#sortKey, :sortKey)" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "T_SK"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey", { "S": "$ctx.args.T_SK.beginsWith" }))
#end
#if( !$util.isNull($ctx.args.T_SK) && !$util.isNull($ctx.args.T_SK.between) )
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND #sortKey BETWEEN :sortKey0 AND :sortKey1" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "T_SK"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey0", { "S": "$ctx.args.T_SK.between[0]" }))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey1", { "S": "$ctx.args.T_SK.between[1]" }))
#end
#if( !$util.isNull($ctx.args.T_SK) && !$util.isNull($ctx.args.T_SK.eq) )
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND #sortKey = :sortKey" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "T_SK"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey", { "S": "$ctx.args.T_SK.eq" }))
#end
#if( !$util.isNull($ctx.args.T_SK) && !$util.isNull($ctx.args.T_SK.lt) )
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND #sortKey < :sortKey" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "T_SK"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey", { "S": "$ctx.args.T_SK.lt" }))
#end
#if( !$util.isNull($ctx.args.T_SK) && !$util.isNull($ctx.args.T_SK.le) )
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND #sortKey <= :sortKey" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "T_SK"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey", { "S": "$ctx.args.T_SK.le" }))
#end
#if( !$util.isNull($ctx.args.T_SK) && !$util.isNull($ctx.args.T_SK.gt) )
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND #sortKey > :sortKey" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "T_SK"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey", { "S": "$ctx.args.T_SK.gt" }))
#end
#if( !$util.isNull($ctx.args.T_SK) && !$util.isNull($ctx.args.T_SK.ge) )
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND #sortKey >= :sortKey" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "T_SK"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey", { "S": "$ctx.args.T_SK.ge" }))
#end
## [End] Applying Key Condition **
## [End] Set query expression for key **
$util.qr($ctx.stash.put("modelQueryExpression", $modelQueryExpression))
{}